"use strict";(self.webpackChunkguidelines=self.webpackChunkguidelines||[]).push([[88],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),p=r,g=d["".concat(s,".").concat(p)]||d[p]||m[p]||o;return n?a.createElement(g,l(l({ref:t},u),{},{components:n})):a.createElement(g,l({ref:t},u))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3173:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1},l="Reusable Components",i={unversionedId:"frontend/NextJS/components",id:"frontend/NextJS/components",title:"Reusable Components",description:"* Tooltip",source:"@site/docs/frontend/NextJS/components.md",sourceDirName:"frontend/NextJS",slug:"/frontend/NextJS/components",permalink:"/docs/frontend/NextJS/components",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/NextJS/components.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Frontend",permalink:"/docs/category/frontend"},next:{title:"API Requests",permalink:"/docs/frontend/NextJS/apiRequests"}},s={},c=[{value:"Tooltip",id:"tooltip",level:2},{value:"Alert Box",id:"alert-box",level:2},{value:"Input",id:"input",level:2},{value:"Date Picker",id:"date-picker",level:2},{value:"Textarea",id:"textarea",level:2},{value:"Toggle",id:"toggle",level:2},{value:"Dropdown",id:"dropdown",level:2},{value:"Multi Select",id:"multi-select",level:2},{value:"Table",id:"table",level:2},{value:"Data Table",id:"data-table",level:2},{value:"Button",id:"button",level:2},{value:"Image Picker",id:"image-picker",level:2},{value:"Sidebar &amp; Navbar",id:"sidebar--navbar",level:2}],u={toc:c};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"reusable-components"},"Reusable Components"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Tooltip"),(0,r.kt)("li",{parentName:"ul"},"Alert Box"),(0,r.kt)("li",{parentName:"ul"},"Input "),(0,r.kt)("li",{parentName:"ul"},"Date Picker"),(0,r.kt)("li",{parentName:"ul"},"Textarea"),(0,r.kt)("li",{parentName:"ul"},"Toggle "),(0,r.kt)("li",{parentName:"ul"},"Dropdown "),(0,r.kt)("li",{parentName:"ul"},"Multi Select "),(0,r.kt)("li",{parentName:"ul"},"Table "),(0,r.kt)("li",{parentName:"ul"},"Data Table "),(0,r.kt)("li",{parentName:"ul"},"Button "),(0,r.kt)("li",{parentName:"ul"},"Image Picker "),(0,r.kt)("li",{parentName:"ul"},"Sidebar & Navbar ")),(0,r.kt)("h2",{id:"tooltip"},"Tooltip"),(0,r.kt)("h2",{id:"alert-box"},"Alert Box"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="alertbox.js"',title:'"alertbox.js"'},'import { Fragment, useRef, useState } from \'react\'\nimport { Dialog, Transition } from \'@headlessui/react\'\nimport { ExclamationTriangleIcon } from \'@heroicons/react/24/outline\'\nimport { useEffect } from \'react\'\n\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(" ");\n  }\nexport default function Alert({data, confirmTrigger, cancelTrigger, openAlert}) {\n  const [inputBox, setInputBox] = useState("")\n  const [errorMsg, setErrorMsg] = useState(false)\n\n  function confirmClick() {\n\n    if (data.inputBox.show == true) {\n        setErrorMsg(false)\n        if(inputBox == data.inputBox.placeholder){\n            confirmTrigger()\n        }else{\n            //show error message\n            setErrorMsg(true)\n        }\n    }else{\n        confirmTrigger()\n    }\n  }\n\n  return (\n    <Transition.Root show={openAlert} as={Fragment}>\n      <Dialog as="div" className="relative z-10"  onClose={() => cancelTrigger()}>\n        <Transition.Child\n          as={Fragment}\n          enter="ease-out duration-300"\n          enterFrom="opacity-0"\n          enterTo="opacity-100"\n          leave="ease-in duration-200"\n          leaveFrom="opacity-100"\n          leaveTo="opacity-0"\n        >\n          <div className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" />\n        </Transition.Child>\n\n        <div className="fixed inset-0 z-10 overflow-y-auto">\n          <div className="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">\n            <Transition.Child\n              as={Fragment}\n              enter="ease-out duration-300"\n              enterFrom="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"\n              enterTo="opacity-100 translate-y-0 sm:scale-100"\n              leave="ease-in duration-200"\n              leaveFrom="opacity-100 translate-y-0 sm:scale-100"\n              leaveTo="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"\n            >\n              <Dialog.Panel className="relative transform overflow-hidden rounded-lg bg-white px-4 pt-5 pb-4 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6">\n                <div className="sm:flex sm:items-start">\n                  <div className="mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">\n                    <data.icon.iconSelected className={classNames("h-6 w-6", `text-${data.icon.color}-500`)} aria-hidden="true" />\n                  </div>\n                  <div className="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">\n                    <Dialog.Title as="h3" className="text-lg font-medium leading-6 text-gray-900">\n                      {data.title}\n                    </Dialog.Title>\n                    <div className="mt-2">\n                      <p className="text-sm text-gray-500">\n                        {data.message}\n                      </p>\n                    </div>\n                    {data.inputBox.show == true && (\n                        <div>\n                            <label htmlFor="email" className="block text-sm font-medium text-gray-700">\n                            {data.inputBox.label}\n                            </label>\n                            <div className="mt-1">\n                            <input\n                                onChange={(e) => setInputBox(e.target.value)}\n                                type="text"\n                                value={inputBox}\n                                required\n                                className="block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"\n                            />\n                            {errorMsg == true && (\n                                <small>{data.inputBox.errorMessage}</small>\n                            )}\n\n                            </div>\n                        </div>\n                    )}\n\n                  </div>\n                </div>\n                <div className="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">\n                  <button\n                    type="button"\n                    className="inline-flex w-full justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm"\n                    onClick={() => confirmClick()}\n                  >\n                    {data.confirmButton.text}\n                  </button>\n                  <button\n                    type="button"\n                    className="mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:w-auto sm:text-sm"\n                    onClick={() => cancelTrigger()}\n                  >\n                    {data.dismissButton.text}\n                  </button>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n')),(0,r.kt)("p",null,"Referencing the Alertbox inside a page & the customization options \ud83d\udc47"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="page.js"',title:'"page.js"'},"const [openAlert, setOpenAlert] = useState(true)\nvar deleteMsg = 'JEEVAN'\n\nconst [alertObj, setAlertObj] = useState({\n  type: 'header',\n  title: 'Replace Header?',\n  message: 'You can add Header only once',\n  confirmButton: {\n    show: true,\n    color: 'green',\n    text: 'Confirm',\n  },\n  dismissButton: {\n    show: true,\n    color: 'red',\n    text: 'Close',\n  },\n  icon: {\n    show: true,\n    color: 'yellow',\n    iconSelected: ExclamationTriangleIcon,\n  },\n  inputBox: {\n    show: true,\n    placeholder: deleteMsg,\n    label: `Enter ${deleteMsg} to delete`,\n    errorMessage: 'Unable to delete',\n  },\n})\n\nconst cancelTrigger = () => {\n  setOpenAlert(false)\n}\n\nfunction confirmTrigger() {\n  console.log('confirm')\n  setOpenAlert(false)\n}\n\nreturn (\n<Alert\n  openAlert={openAlert}\n  cancelTrigger={cancelTrigger}\n  data={alertObj}\n  confirmTrigger={confirmTrigger}\n/>\n)\n")),(0,r.kt)("h2",{id:"input"},"Input"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="input.js"',title:'"input.js"'},'import { Fragment } from \'react\'\nimport { ExclamationCircleIcon } from \'@heroicons/react/24/outline\'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(" ");\n}\n\nexport default function Input({data, input, setInput}) {\n  return (\n    <div>\n      <label htmlFor="email" className="block text-sm font-medium text-gray-700">\n        {data.label}\n      </label>\n      <div className="mt-1">\n        <input\n          onChange={(e) => setInput(e.target.value)}\n          type={data.type}\n          value={input}\n          required\n          className="block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"\n        />\n      </div>\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n')),(0,r.kt)("h2",{id:"date-picker"},"Date Picker"),(0,r.kt)("h2",{id:"textarea"},"Textarea"),(0,r.kt)("h2",{id:"toggle"},"Toggle"),(0,r.kt)("h2",{id:"dropdown"},"Dropdown"),(0,r.kt)("h2",{id:"multi-select"},"Multi Select"),(0,r.kt)("h2",{id:"table"},"Table"),(0,r.kt)("h2",{id:"data-table"},"Data Table"),(0,r.kt)("h2",{id:"button"},"Button"),(0,r.kt)("h2",{id:"image-picker"},"Image Picker"),(0,r.kt)("h2",{id:"sidebar--navbar"},"Sidebar & Navbar"))}m.isMDXComponent=!0}}]);